name: Quick Tests

on:
  push:
    branches-ignore: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  quick-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Redis CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-tools

    - name: Wait for Redis
      run: timeout 30 bash -c 'until redis-cli -h localhost -p 6379 ping; do sleep 1; done'

    - name: Create test environment
      run: |
        mkdir -p data logs
        echo "NODE_ENV=test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV

    - name: Initialize database
      run: npm run init-db

    - name: Run basic tests (without LLM)
      run: |
        # Run tests that don't require Ollama for faster feedback
        # Exclude LLM-related tests by pattern to avoid connection errors
        npm test -- --testNamePattern="Health|Geocoding|Error|Facility Discovery|should return|should handle|should validate" --testPathIgnorePatterns="llm" --testTimeout=30000
      env:
        NODE_ENV: test
        REDIS_URL: redis://localhost:6379
        # Skip LLM tests for speed and avoid connection errors
        SKIP_LLM_TESTS: true
        # Use dummy Ollama URL to avoid connection attempts
        OLLAMA_URL: http://dummy:11434
        # Disable LLM availability check in test setup
        DISABLE_LLM_CHECK: true

    - name: Basic build test
      run: |
        # Test that the application can build
        npm run build || echo "No build script found, skipping"

    - name: Lint check
      run: |
        # Run linting if available
        npm run lint || echo "No lint script found, skipping"
      continue-on-error: true

    - name: Quick dependency check
      run: |
        # Verify core dependencies are available
        node -e "console.log('Node.js version:', process.version)"
        npm --version
        redis-cli --version
        echo "âœ… Core dependencies verified"